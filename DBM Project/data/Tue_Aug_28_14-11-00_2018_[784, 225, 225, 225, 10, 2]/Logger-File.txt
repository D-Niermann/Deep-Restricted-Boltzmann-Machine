3.      Creating RBMs
4.      2,1
5.      2,2
6.      2,2
7.      2,2
8.      1,2
------------------------------------------------
Info     Tue_Aug_28_14-11-00_2018 

1.-v    Pretrain Session
2.--v   	Pretraining  1. RBM
3.---v  		Epoch: 1 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1464 
3.---^  		Epoch: 1 / 30 (took 3.193 sek)
4.---v  		Epoch: 2 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1154 
4.---^  		Epoch: 2 / 30 (took 3.179 sek)
5.---v  		Epoch: 3 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1003 
5.---^  		Epoch: 3 / 30 (took 3.308 sek)
6.---v  		Epoch: 4 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0918 
6.---^  		Epoch: 4 / 30 (took 3.184 sek)
7.---v  		Epoch: 5 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0855 
7.---^  		Epoch: 5 / 30 (took 3.18 sek)
8.---v  		Epoch: 6 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0799 
8.---^  		Epoch: 6 / 30 (took 3.197 sek)
9.---v  		Epoch: 7 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0759 
9.---^  		Epoch: 7 / 30 (took 3.19 sek)
10.---v  		Epoch: 8 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0735 
10.---^  		Epoch: 8 / 30 (took 3.2 sek)
11.---v  		Epoch: 9 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0709 
11.---^  		Epoch: 9 / 30 (took 3.187 sek)
12.---v  		Epoch: 10 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0676 
12.---^  		Epoch: 10 / 30 (took 3.213 sek)
13.---v  		Epoch: 11 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0653 
13.---^  		Epoch: 11 / 30 (took 3.248 sek)
14.---v  		Epoch: 12 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.063 
14.---^  		Epoch: 12 / 30 (took 3.165 sek)
15.---v  		Epoch: 13 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0617 
15.---^  		Epoch: 13 / 30 (took 3.187 sek)
16.---v  		Epoch: 14 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0603 
16.---^  		Epoch: 14 / 30 (took 3.202 sek)
17.---v  		Epoch: 15 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0608 
17.---^  		Epoch: 15 / 30 (took 3.172 sek)
18.---v  		Epoch: 16 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0583 
18.---^  		Epoch: 16 / 30 (took 3.192 sek)
19.---v  		Epoch: 17 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0576 
19.---^  		Epoch: 17 / 30 (took 3.191 sek)
20.---v  		Epoch: 18 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0573 
20.---^  		Epoch: 18 / 30 (took 3.202 sek)
21.---v  		Epoch: 19 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0569 
21.---^  		Epoch: 19 / 30 (took 3.235 sek)
22.---v  		Epoch: 20 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0552 
22.---^  		Epoch: 20 / 30 (took 3.178 sek)
23.---v  		Epoch: 21 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.055 
23.---^  		Epoch: 21 / 30 (took 3.177 sek)
24.---v  		Epoch: 22 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0547 
24.---^  		Epoch: 22 / 30 (took 3.23 sek)
25.---v  		Epoch: 23 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0533 
25.---^  		Epoch: 23 / 30 (took 3.172 sek)
26.---v  		Epoch: 24 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0532 
26.---^  		Epoch: 24 / 30 (took 3.181 sek)
27.---v  		Epoch: 25 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0514 
27.---^  		Epoch: 25 / 30 (took 3.193 sek)
28.---v  		Epoch: 26 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0524 
28.---^  		Epoch: 26 / 30 (took 3.214 sek)
29.---v  		Epoch: 27 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0512 
29.---^  		Epoch: 27 / 30 (took 3.168 sek)
30.---v  		Epoch: 28 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0506 
30.---^  		Epoch: 28 / 30 (took 3.191 sek)
31.---v  		Epoch: 29 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0501 
31.---^  		Epoch: 29 / 30 (took 3.259 sek)
32.---v  		Epoch: 30 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0497 
32.---^  		Epoch: 30 / 30 (took 3.195 sek)
2.--^   	Pretraining  1. RBM (took 96.019 sek)
33.--v   	Pretraining  2. RBM
34.---v  		Epoch: 1 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.3284 
34.---^  		Epoch: 1 / 30 (took 2.423 sek)
35.---v  		Epoch: 2 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.2735 
35.---^  		Epoch: 2 / 30 (took 2.429 sek)
36.---v  		Epoch: 3 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.2241 
36.---^  		Epoch: 3 / 30 (took 2.374 sek)
37.---v  		Epoch: 4 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.2044 
37.---^  		Epoch: 4 / 30 (took 2.384 sek)
38.---v  		Epoch: 5 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1941 
38.---^  		Epoch: 5 / 30 (took 2.426 sek)
39.---v  		Epoch: 6 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1792 
39.---^  		Epoch: 6 / 30 (took 2.502 sek)
40.---v  		Epoch: 7 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.17 
40.---^  		Epoch: 7 / 30 (took 2.37 sek)
41.---v  		Epoch: 8 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1587 
41.---^  		Epoch: 8 / 30 (took 2.378 sek)
42.---v  		Epoch: 9 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1523 
42.---^  		Epoch: 9 / 30 (took 2.412 sek)
43.---v  		Epoch: 10 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1478 
43.---^  		Epoch: 10 / 30 (took 2.482 sek)
44.---v  		Epoch: 11 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1409 
44.---^  		Epoch: 11 / 30 (took 2.562 sek)
45.---v  		Epoch: 12 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1416 
45.---^  		Epoch: 12 / 30 (took 2.47 sek)
46.---v  		Epoch: 13 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1336 
46.---^  		Epoch: 13 / 30 (took 2.423 sek)
47.---v  		Epoch: 14 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1296 
47.---^  		Epoch: 14 / 30 (took 2.392 sek)
48.---v  		Epoch: 15 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1291 
48.---^  		Epoch: 15 / 30 (took 2.427 sek)
49.---v  		Epoch: 16 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1285 
49.---^  		Epoch: 16 / 30 (took 2.411 sek)
50.---v  		Epoch: 17 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1241 
50.---^  		Epoch: 17 / 30 (took 2.369 sek)
51.---v  		Epoch: 18 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1193 
51.---^  		Epoch: 18 / 30 (took 2.408 sek)
52.---v  		Epoch: 19 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1167 
52.---^  		Epoch: 19 / 30 (took 2.367 sek)
53.---v  		Epoch: 20 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1155 
53.---^  		Epoch: 20 / 30 (took 2.433 sek)
54.---v  		Epoch: 21 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1157 
54.---^  		Epoch: 21 / 30 (took 2.363 sek)
55.---v  		Epoch: 22 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1134 
55.---^  		Epoch: 22 / 30 (took 2.357 sek)
56.---v  		Epoch: 23 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1138 
56.---^  		Epoch: 23 / 30 (took 2.401 sek)
57.---v  		Epoch: 24 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1138 
57.---^  		Epoch: 24 / 30 (took 2.413 sek)
58.---v  		Epoch: 25 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.11 
58.---^  		Epoch: 25 / 30 (took 2.416 sek)
59.---v  		Epoch: 26 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1118 
59.---^  		Epoch: 26 / 30 (took 2.437 sek)
60.---v  		Epoch: 27 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1086 
60.---^  		Epoch: 27 / 30 (took 2.426 sek)
61.---v  		Epoch: 28 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1078 
61.---^  		Epoch: 28 / 30 (took 2.38 sek)
62.---v  		Epoch: 29 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1073 
62.---^  		Epoch: 29 / 30 (took 2.406 sek)
63.---v  		Epoch: 30 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1083 
63.---^  		Epoch: 30 / 30 (took 2.469 sek)
33.--^   	Pretraining  2. RBM (took 72.544 sek)
64.--v   	Pretraining  3. RBM
65.---v  		Epoch: 1 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.282 
65.---^  		Epoch: 1 / 30 (took 2.715 sek)
66.---v  		Epoch: 2 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.2345 
66.---^  		Epoch: 2 / 30 (took 2.73 sek)
67.---v  		Epoch: 3 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1931 
67.---^  		Epoch: 3 / 30 (took 2.741 sek)
68.---v  		Epoch: 4 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1703 
68.---^  		Epoch: 4 / 30 (took 2.802 sek)
69.---v  		Epoch: 5 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1564 
69.---^  		Epoch: 5 / 30 (took 2.779 sek)
70.---v  		Epoch: 6 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1479 
70.---^  		Epoch: 6 / 30 (took 2.774 sek)
71.---v  		Epoch: 7 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1429 
71.---^  		Epoch: 7 / 30 (took 2.746 sek)
72.---v  		Epoch: 8 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1367 
72.---^  		Epoch: 8 / 30 (took 2.82 sek)
73.---v  		Epoch: 9 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1304 
73.---^  		Epoch: 9 / 30 (took 2.738 sek)
74.---v  		Epoch: 10 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1254 
74.---^  		Epoch: 10 / 30 (took 2.765 sek)
75.---v  		Epoch: 11 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1208 
75.---^  		Epoch: 11 / 30 (took 2.713 sek)
76.---v  		Epoch: 12 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1169 
76.---^  		Epoch: 12 / 30 (took 2.696 sek)
77.---v  		Epoch: 13 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1164 
77.---^  		Epoch: 13 / 30 (took 2.678 sek)
78.---v  		Epoch: 14 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1108 
78.---^  		Epoch: 14 / 30 (took 2.805 sek)
79.---v  		Epoch: 15 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1107 
79.---^  		Epoch: 15 / 30 (took 2.762 sek)
80.---v  		Epoch: 16 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1091 
80.---^  		Epoch: 16 / 30 (took 2.781 sek)
81.---v  		Epoch: 17 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1096 
81.---^  		Epoch: 17 / 30 (took 2.724 sek)
82.---v  		Epoch: 18 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1075 
82.---^  		Epoch: 18 / 30 (took 2.748 sek)
83.---v  		Epoch: 19 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1056 
83.---^  		Epoch: 19 / 30 (took 2.745 sek)
84.---v  		Epoch: 20 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1052 
84.---^  		Epoch: 20 / 30 (took 2.797 sek)
85.---v  		Epoch: 21 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1024 
85.---^  		Epoch: 21 / 30 (took 2.726 sek)
86.---v  		Epoch: 22 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1035 
86.---^  		Epoch: 22 / 30 (took 2.724 sek)
87.---v  		Epoch: 23 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1035 
87.---^  		Epoch: 23 / 30 (took 2.737 sek)
88.---v  		Epoch: 24 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1015 
88.---^  		Epoch: 24 / 30 (took 2.74 sek)
89.---v  		Epoch: 25 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1022 
89.---^  		Epoch: 25 / 30 (took 2.737 sek)
90.---v  		Epoch: 26 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1001 
90.---^  		Epoch: 26 / 30 (took 2.821 sek)
91.---v  		Epoch: 27 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.102 
91.---^  		Epoch: 27 / 30 (took 2.754 sek)
92.---v  		Epoch: 28 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1012 
92.---^  		Epoch: 28 / 30 (took 2.797 sek)
93.---v  		Epoch: 29 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.0992 
93.---^  		Epoch: 29 / 30 (took 2.692 sek)
94.---v  		Epoch: 30 / 30
Info     			Learnrate: 0.0001 
Info     			error 0.1002 
94.---^  		Epoch: 30 / 30 (took 2.748 sek)
64.--^   	Pretraining  3. RBM (took 82.573 sek)
95.--v   	Pretraining  4. RBM
95.--^   	Pretraining  4. RBM (took 0.0 sek)
96.--v   	Pretraining  5. RBM
96.--^   	Pretraining  5. RBM (took 0.0 sek)
1.-^    Pretrain Session (took 251.186 sek)
------------------------------------------------

1.-v    DBM Train Session
2.--v   	Run 0
3.      		Initializing graph
Info     		Batchsize: 110 N_Updates 25000 
4.---v  		Deep BM Epoch: 1 / 50
5.      			Shuffling TrainData
6.      			Running Epoch
4.---^  		Deep BM Epoch: 1 / 50 (took 69.628 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
7.      		Calculation weights diff
Info     		Learnrate:  0.001 
Info     		Temp:  0.01 
Info     		freerun_steps:  2 
------------------------------------------------

1.      		Initializing graph
2.      		loading numpy vars into graph
3.---v  		Testing DBM with 10000 images
Info     			Using test data 
4.----v 			Sampling hidden 30 times 
Info     				temp: 0.010000 -> 0.010000 
4.----^ 			Sampling hidden 30 times  (took 3.385 sek)
5.      			Taking only the maximum
3.---^  		Testing DBM with 10000 images (took 7.776 sek)
Info     		------------- Test Log ------------- 
Info     		Reconstr. error normal:  0.05347 
Info     		Class error:  0.4733 
Info     		Context Error:  0.49994 
Info     		Wrong Digits:  4733  with average:  0.043 
Info     		Correct Digits:  5267  with average:  0.057 
------------------------------------------------

1.      		Creating Backup of Parameters
2.      		using dataframe items conversion for python 3.x
2.--^   	Run 0 (took 80.333 sek)
3.--v   	Run 1
4.      		Initializing graph
5.      		loading numpy vars into graph
Info     		Batchsize: 110 N_Updates 25000 
6.---v  		Deep BM Epoch: 2 / 50
7.      			Shuffling TrainData
8.      			Running Epoch
6.---^  		Deep BM Epoch: 2 / 50 (took 80.808 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
9.      		Calculation weights diff
Info     		Learnrate:  0.001 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
3.--^   	Run 1 (took 83.006 sek)

1.--v   	Run 2
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 3 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 3 / 50 (took 79.797 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000998 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 2 (took 79.816 sek)

1.--v   	Run 3
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 4 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 4 / 50 (took 79.673 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000997 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 3 (took 79.691 sek)

1.--v   	Run 4
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 5 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 5 / 50 (took 79.332 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000996 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 4 (took 79.354 sek)

1.--v   	Run 5
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 6 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 6 / 50 (took 79.911 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000995 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 5 (took 79.931 sek)

1.--v   	Run 6
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 7 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 7 / 50 (took 80.376 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000994 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 6 (took 80.393 sek)

1.--v   	Run 7
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 8 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 8 / 50 (took 80.186 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000993 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 7 (took 80.401 sek)

1.--v   	Run 8
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 9 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 9 / 50 (took 79.719 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000992 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 8 (took 79.739 sek)

1.--v   	Run 9
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 10 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 10 / 50 (took 80.272 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000991 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 9 (took 80.288 sek)

1.--v   	Run 10
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 11 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 11 / 50 (took 79.843 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.00099 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------

1.      		Initializing graph
2.      		loading numpy vars into graph
3.---v  		Testing DBM with 10000 images
Info     			Using test data 
4.----v 			Sampling hidden 30 times 
Info     				temp: 0.010000 -> 0.010000 
4.----^ 			Sampling hidden 30 times  (took 3.48 sek)
5.      			Taking only the maximum
3.---^  		Testing DBM with 10000 images (took 8.69 sek)
Info     		------------- Test Log ------------- 
Info     		Reconstr. error normal:  0.0473 
Info     		Class error:  0.2518 
Info     		Context Error:  0.48865 
Info     		Wrong Digits:  2518  with average:  0.109 
Info     		Correct Digits:  7482  with average:  0.258 
------------------------------------------------

1.      		Creating Backup of Parameters
2.      		using dataframe items conversion for python 3.x
1.--^   	Run 10 (took 91.377 sek)
3.--v   	Run 11
4.      		Initializing graph
5.      		loading numpy vars into graph
Info     		Batchsize: 110 N_Updates 25000 
6.---v  		Deep BM Epoch: 12 / 50
7.      			Shuffling TrainData
8.      			Running Epoch
6.---^  		Deep BM Epoch: 12 / 50 (took 80.837 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
9.      		Calculation weights diff
Info     		Learnrate:  0.001 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
3.--^   	Run 11 (took 83.587 sek)

1.--v   	Run 12
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 13 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 13 / 50 (took 79.673 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000988 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 12 (took 79.736 sek)

1.--v   	Run 13
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 14 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 14 / 50 (took 80.128 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000987 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 13 (took 80.147 sek)

1.--v   	Run 14
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 15 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 15 / 50 (took 80.022 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000986 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 14 (took 80.038 sek)

1.--v   	Run 15
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 16 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 16 / 50 (took 79.975 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000985 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 15 (took 79.993 sek)

1.--v   	Run 16
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 17 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 17 / 50 (took 80.477 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000984 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 16 (took 80.491 sek)

1.--v   	Run 17
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 18 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 18 / 50 (took 79.8 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000983 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 17 (took 79.838 sek)

1.--v   	Run 18
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 19 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 19 / 50 (took 80.456 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000982 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 18 (took 80.474 sek)

1.--v   	Run 19
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 20 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 20 / 50 (took 79.692 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000981 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 19 (took 79.708 sek)

1.--v   	Run 20
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 21 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 21 / 50 (took 80.516 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.00098 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------

1.      		Initializing graph
2.      		loading numpy vars into graph
3.---v  		Testing DBM with 10000 images
Info     			Using test data 
4.----v 			Sampling hidden 30 times 
Info     				temp: 0.010000 -> 0.010000 
4.----^ 			Sampling hidden 30 times  (took 3.36 sek)
5.      			Taking only the maximum
3.---^  		Testing DBM with 10000 images (took 9.05 sek)
Info     		------------- Test Log ------------- 
Info     		Reconstr. error normal:  0.04446 
Info     		Class error:  0.2143 
Info     		Context Error:  0.44124 
Info     		Wrong Digits:  2143  with average:  0.307 
Info     		Correct Digits:  7857  with average:  0.633 
------------------------------------------------

1.      		Creating Backup of Parameters
2.      		using dataframe items conversion for python 3.x
1.--^   	Run 20 (took 92.624 sek)
3.--v   	Run 21
4.      		Initializing graph
5.      		loading numpy vars into graph
Info     		Batchsize: 110 N_Updates 25000 
6.---v  		Deep BM Epoch: 22 / 50
7.      			Shuffling TrainData
8.      			Running Epoch
6.---^  		Deep BM Epoch: 22 / 50 (took 80.791 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
9.      		Calculation weights diff
Info     		Learnrate:  0.001 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
3.--^   	Run 21 (took 84.828 sek)

1.--v   	Run 22
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 23 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 23 / 50 (took 79.906 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000978 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 22 (took 79.926 sek)

1.--v   	Run 23
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 24 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 24 / 50 (took 79.994 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000978 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 23 (took 80.01 sek)

1.--v   	Run 24
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 25 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 25 / 50 (took 79.687 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000977 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 24 (took 79.703 sek)

1.--v   	Run 25
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 26 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 26 / 50 (took 79.595 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000976 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 25 (took 79.611 sek)

1.--v   	Run 26
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 27 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 27 / 50 (took 79.319 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000975 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 26 (took 79.337 sek)

1.--v   	Run 27
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 28 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 28 / 50 (took 79.56 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000974 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 27 (took 79.577 sek)

1.--v   	Run 28
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 29 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 29 / 50 (took 79.632 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000973 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 28 (took 79.657 sek)

1.--v   	Run 29
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 30 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 30 / 50 (took 79.577 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000972 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 29 (took 79.594 sek)

1.--v   	Run 30
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 31 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 31 / 50 (took 80.2 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000971 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------

1.      		Initializing graph
2.      		loading numpy vars into graph
3.---v  		Testing DBM with 10000 images
Info     			Using test data 
4.----v 			Sampling hidden 30 times 
Info     				temp: 0.010000 -> 0.010000 
4.----^ 			Sampling hidden 30 times  (took 3.701 sek)
5.      			Taking only the maximum
3.---^  		Testing DBM with 10000 images (took 10.948 sek)
Info     		------------- Test Log ------------- 
Info     		Reconstr. error normal:  0.04241 
Info     		Class error:  0.1986 
Info     		Context Error:  0.39298 
Info     		Wrong Digits:  1986  with average:  0.498 
Info     		Correct Digits:  8014  with average:  0.82 
------------------------------------------------

1.      		Creating Backup of Parameters
2.      		using dataframe items conversion for python 3.x
1.--^   	Run 30 (took 95.528 sek)
3.--v   	Run 31
4.      		Initializing graph
5.      		loading numpy vars into graph
Info     		Batchsize: 110 N_Updates 25000 
6.---v  		Deep BM Epoch: 32 / 50
7.      			Shuffling TrainData
8.      			Running Epoch
6.---^  		Deep BM Epoch: 32 / 50 (took 81.774 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
9.      		Calculation weights diff
Info     		Learnrate:  0.001 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
3.--^   	Run 31 (took 86.647 sek)

1.--v   	Run 32
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 33 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 33 / 50 (took 80.466 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000969 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 32 (took 80.484 sek)

1.--v   	Run 33
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 34 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 34 / 50 (took 80.991 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000968 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 33 (took 81.03 sek)

1.--v   	Run 34
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 35 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 35 / 50 (took 80.582 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000967 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 34 (took 80.598 sek)

1.--v   	Run 35
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 36 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 36 / 50 (took 80.408 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000966 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 35 (took 80.446 sek)

1.--v   	Run 36
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 37 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 37 / 50 (took 80.487 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000965 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 36 (took 80.504 sek)

1.--v   	Run 37
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 38 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 38 / 50 (took 80.783 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000964 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 37 (took 80.8 sek)

1.--v   	Run 38
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 39 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 39 / 50 (took 80.719 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000963 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 38 (took 80.734 sek)

1.--v   	Run 39
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 40 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 40 / 50 (took 80.443 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000962 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 39 (took 80.479 sek)

1.--v   	Run 40
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 41 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 41 / 50 (took 80.813 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000962 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------

1.      		Initializing graph
2.      		loading numpy vars into graph
3.---v  		Testing DBM with 10000 images
Info     			Using test data 
4.----v 			Sampling hidden 30 times 
Info     				temp: 0.010000 -> 0.010000 
4.----^ 			Sampling hidden 30 times  (took 4.101 sek)
5.      			Taking only the maximum
3.---^  		Testing DBM with 10000 images (took 12.35 sek)
Info     		------------- Test Log ------------- 
Info     		Reconstr. error normal:  0.04192 
Info     		Class error:  0.1923 
Info     		Context Error:  0.34585 
Info     		Wrong Digits:  1923  with average:  0.667 
Info     		Correct Digits:  8077  with average:  0.914 
------------------------------------------------

1.      		Creating Backup of Parameters
2.      		using dataframe items conversion for python 3.x
1.--^   	Run 40 (took 98.384 sek)
3.--v   	Run 41
4.      		Initializing graph
5.      		loading numpy vars into graph
Info     		Batchsize: 110 N_Updates 25000 
6.---v  		Deep BM Epoch: 42 / 50
7.      			Shuffling TrainData
8.      			Running Epoch
6.---^  		Deep BM Epoch: 42 / 50 (took 82.41 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
9.      		Calculation weights diff
Info     		Learnrate:  0.001 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
3.--^   	Run 41 (took 87.979 sek)

1.--v   	Run 42
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 43 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 43 / 50 (took 80.007 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.00096 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 42 (took 80.047 sek)

1.--v   	Run 43
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 44 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 44 / 50 (took 80.553 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000959 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 43 (took 80.57 sek)

1.--v   	Run 44
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 45 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 45 / 50 (took 80.803 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000958 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 44 (took 80.842 sek)

1.--v   	Run 45
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 46 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 46 / 50 (took 80.267 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000957 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 45 (took 80.283 sek)

1.--v   	Run 46
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 47 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 47 / 50 (took 80.571 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000956 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 46 (took 80.586 sek)

1.--v   	Run 47
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 48 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 48 / 50 (took 79.622 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000955 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 47 (took 79.638 sek)

1.--v   	Run 48
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 49 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 49 / 50 (took 79.78 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000954 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 48 (took 79.796 sek)

1.--v   	Run 49
Info     		Batchsize: 110 N_Updates 25000 
2.---v  		Deep BM Epoch: 50 / 50
3.      			Shuffling TrainData
4.      			Running Epoch
2.---^  		Deep BM Epoch: 50 / 50 (took 80.192 sek)
Info     		Saved Weights and Biases as NumPy Arrays. 
5.      		Calculation weights diff
Info     		Learnrate:  0.000953 
Info     		Temp:  0.01 
Info     		freerun_steps:  8 
------------------------------------------------
1.--^   	Run 49 (took 80.219 sek)
1.-^    DBM Train Session (took 4088.887 sek)
------------------------------------------------

1.      Initializing graph
2.      loading numpy vars into graph
3.-v    Testing DBM with 10000 images
Info     	Using test data 
4.--v   	Sampling hidden 30 times 
Info     		temp: 0.010000 -> 0.010000 
4.--^   	Sampling hidden 30 times  (took 3.78 sek)
5.      	Taking only the maximum
3.-^    Testing DBM with 10000 images (took 16.03 sek)
Info     ------------- Test Log ------------- 
Info     Reconstr. error normal:  0.04171 
Info     Class error:  0.183 
Info     Context Error:  0.31074 
Info     Wrong Digits:  1830  with average:  0.734 
Info     Correct Digits:  8170  with average:  0.944 
------------------------------------------------

1.      using dataframe items conversion for python 3.x
Info     Saved data and log to: /home/dario/Dokumente/DBM Project/data/Tue_Aug_28_14-11-00_2018_[784, 225, 225, 225, 10, 2] 
2.      Plotting...
3.      Plotting Weights histograms
4.      Finished
